# version: '3.8'

# # This file orchestrates the Nginx proxy and two Node.js application instances.
# # All variable values are sourced from the 'blue_green_deployment.env' file.

# env_file:
#   - blue-green.env

services:
  # --- Nginx Reverse Proxy Service ---
  nginx:
    container_name: nginx_proxy
    image: nginx:latest
    # Expose the Nginx port (e.g., 8080) publicly
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    # Mount the template and necessary scripts
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/nginx.conf.template:ro
    # Pass necessary environment variables into the container for envsubst
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - ACTIVE_POOL=${ACTIVE_POOL}
      - APP_INTERNAL_PORT=${APP_INTERNAL_PORT}
    # CRITICAL: This command runs envsubst and then starts Nginx in the foreground.
    # The 'exec' ensures the shell script is replaced by the Nginx process, keeping the container alive.
    command: >
      /bin/bash -c "
      # 1. Substitute environment variables into the template and save to the Nginx config directory
      envsubst '$$NGINX_PORT $$ACTIVE_POOL $$APP_INTERNAL_PORT' < /etc/nginx/templates/nginx.conf.template > /etc/nginx/conf.d/default.conf &&
      # 2. Start Nginx in the foreground
      exec nginx -g 'daemon off;'
      "
    restart: unless-stopped
    depends_on:
      - app_blue
      - app_green

  # --- Blue Application Pool (Primary) ---
  app_blue:
    container_name: app_blue
    image: ${BLUE_IMAGE}
    # Expose the port used for chaos testing (e.g., 8081)
    ports:
      - "${BLUE_APP_PORT}:${APP_INTERNAL_PORT}"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
    restart: unless-stopped

  # --- Green Application Pool (Backup) ---
  app_green:
    container_name: app_green
    image: ${GREEN_IMAGE}
    # Expose the port used for chaos testing (e.g., 8082)
    ports:
      - "${GREEN_APP_PORT}:${APP_INTERNAL_PORT}"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
    restart: unless-stopped
